# 优化配置文件 - 解决LLM超时问题
# 数据湖多智能体系统配置文件 - 性能优化版

# 基础配置
project:
  name: "DataLakes Multi-Agent System"
  version: "1.0.0"
  debug: false  # 关闭调试减少开销

# 路径配置
paths:
  data_dir: "./data"
  cache_dir: "./cache"
  log_dir: "./logs"
  prompt_templates_dir: "./src/config/prompts"

# LLM配置优化 - 减少超时和响应时间
llm:
  provider: "gemini"  
  model_name: "gemini-1.5-flash"
  temperature: 0        # 确定性输出，提高速度
  max_tokens: 500       # ⚡ 减少到500，显著提高响应速度
  timeout: 8           # ⚡ 增加到8秒，给LLM更多时间
  # API密钥通过环境变量设置

# 向量数据库配置
vector_db:
  provider: "hnsw"
  dimension: 384
  index_type: "IVFFlat"
  db_path: "./data/vector_db"
  collection_name: "data_lakes_vectors"
  max_elements: 10000
  
  # HNSW特定配置
  hnsw_config:
    M: 48
    ef_construction: 200
    ef: 50
    max_elements: 100000
    space: "cosine"

# 倒排索引配置
index:
  provider: "whoosh"
  index_path: "./data/index_db"
  schema_fields:
    - "table_name"
    - "column_name"
    - "values"

# 搜索配置优化
search:
  # 元数据过滤
  metadata_filter:
    enabled: true
    max_candidates: 300    # ⚡ 减少候选表数量
    
  # 向量搜索
  vector_search:
    enabled: true
    top_k: 30             # ⚡ 减少向量搜索结果
    batch_size: 50        # ⚡ 减少批处理大小
    
  # LLM验证
  llm_verify:
    enabled: true
    max_candidates: 5     # ⚡ 显著减少LLM验证数量
    batch_size: 5         # ⚡ 每批处理5个，避免超时
    early_stop_threshold: 0.9  # 提前停止阈值

# 向量化计算优化器配置
vectorized_optimizer:
  enabled: true
  batch_size: 50          # ⚡ 减少批处理大小
  use_gpu: false            
  max_workers: 4          # 适中的工作进程数
  chunk_size: 25          # ⚡ 减少分块大小
  parallel_threshold: 500 # 降低并行处理阈值
  memory_limit_mb: 2048
  precision: "float32"

# 阈值配置
thresholds:
  semantic_similarity_threshold: 0.65   # 稍微提高阈值
  value_overlap_threshold: 0.35
  column_match_confidence_threshold: 0.65
  
  max_candidates: 40        # ⚡ 减少候选数量
  top_k_results: 10
  
  column_count_weight: 0.4
  confidence_weight: 0.4
  key_column_bonus: 0.2
  
  hnsw_search_k_multiplier: 2.5  # ⚡ 减少搜索范围

# 缓存配置
cache:
  enabled: true
  cache_dir: "./cache"
  ttl_seconds: 7200        # 2小时缓存
  max_size_mb: 2048
  
  multi_level_cache:
    enabled: true           
    l1_memory_size: 2000    # 增加内存缓存
    l2_redis_enabled: false     
    l3_disk_enabled: true       
    l3_disk_path: "./cache/l3"

# 日志配置
logging:
  level: "WARNING"     # ⚡ 减少日志级别，提高性能
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_rotation: true
  max_file_size_mb: 10
  backup_count: 3

# 性能配置优化 - 解决超时问题
performance:
  max_concurrent_requests: 5    # ⚡ 减少并发，避免资源竞争
  request_timeout: 8            # 与LLM超时一致
  retry_attempts: 1             # 快速失败
  batch_size: 50                # ⚡ 减少批处理大小
  
  # 优化工作流配置
  optimized_workflow:
    enabled: true
    metadata_filter_top_k: 300     # ⚡ 减少初筛数量
    vector_search_top_k: 30        # ⚡ 减少向量搜索数量
    llm_verify_top_k: 5            # ⚡ 显著减少LLM验证
    
    # 批处理配置
    batch_embedding_size: 50       # ⚡ 减少批量嵌入大小
    batch_llm_size: 5              # ⚡ 关键：减少LLM批处理大小
    
    # 并行处理配置
    max_workers: 4                 # ⚡ 适中的并行度
    async_batch_size: 10           # ⚡ 减少异步批处理
    
    # 缓存预热配置
    cache_warm_up_enabled: true
    hot_tables_count: 50           # ⚡ 减少热点表数量
    
    # 性能监控
    enable_monitoring: true
    slow_query_threshold: 3        # ⚡ 更严格的慢查询监控
    export_metrics: true
    
    # LLM优化参数
    llm_timeout_per_call: 7.0     # ⚡ 增加单次调用超时
    llm_early_stop: true           # ⚡ 启用早停
    llm_cache_enabled: true        # ⚡ 启用LLM缓存

# 安全配置
security:
  enable_api_key_validation: true
  rate_limit_per_minute: 30       # ⚡ 减少API调用频率
  allowed_file_types: [".csv", ".json", ".parquet"]
  max_file_size_mb: 50

# 实验配置
experiment:
  enable_fast_mode: true           # ⚡ 启用快速模式
  skip_slow_queries: true          # ⚡ 跳过慢查询
  timeout_skip_threshold: 3        # ⚡ 3秒后跳过